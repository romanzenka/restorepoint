% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/restorepoint.R
\name{restore.point.options}
\alias{restore.point.options}
\title{Set global options for restore points}
\usage{
restore.point.options(options = NULL, display.restore.point = FALSE, ...)
}
\arguments{
\item{options}{a list of options that shall be set. Possible options are listed below}

\item{...}{options can also directly be passed. The following options can be set:
- storing Default=TRUE enable or disable storing of options, setting storing = FALSE basicially turns off debugging via restore points
- deep.copy Default = FALSE. If TRUE then when storing and restoring tries to make a deep copy of R objects that are by default copied by reference, like environments. deep.copy = FALSE substantially speeds up restore.point.
- to.global Default=TRUE. If  TRUE then when options are restored, they are simply copied into the global environment and the R console is directly used for debugging. If FALSE a browser mode will be started instead. It is still possible to parse all R commands into the browser and to use copy and paste. To quit the browser press ESC in the R console. The advantage of the browser is that all objects are stored in a newly generated environment that mimics the environemnt of the original function, i.e. global varariables are not overwritten. Furthermore in the browser mode, one can pass the ... object to other functions, while this does not work in the global environment. The drawback is that the browser is still not as convenient as the normal R console, e.g. pressing arrow up does not restore the previous command. Also, one has to press Esc to leave the browser mode.}
}
\description{
Set global options for restore points
}
